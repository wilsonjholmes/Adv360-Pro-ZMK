/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: left_hand_positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
        quick_tap_ms = <200>;
        flavor = "tap-unless-interrupted";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL          &kp N1          &kp N2       &kp N3            &kp N4  &kp N5                &tog 6                                                                         &mo 1  &kp N6             &kp N7               &kp N8           &kp N9           &kp N0  &kp MINUS
   &kp TAB           &kp Q           &kp W        &kp F             &kp P   &kp B                &tog 4                                                                         &mo 2   &kp J              &kp L                &kp U            &kp Y    &kp SEMICOLON   &kp BSLH
   &kp ESC  &hm LEFT_GUI A  &hm LEFT_ALT R  &hm LCTRL S  &hm LEFT_SHIFT T   &kp G                 &none     &kp LGUI   &kp LALT                   &kp LGUI   &kp LEFT_ALT       &none   &kp M  &hm RIGHT_SHIFT N  &hm RIGHT_CONTROL E  &hm RIGHT_ALT I  &hm RIGHT_GUI O    &kp SQT
 &kp LSHFT           &kp Z           &kp X        &kp C             &kp D   &kp V                 &none        &none  &kp LCTRL   &none   &none  &kp RCTRL          &none       &none   &kp K              &kp H            &kp COMMA       &kp PERIOD         &kp FSLH  &kp RSHFT
     &mo 1       &kp GRAVE        &kp CAPS     &kp LEFT         &kp RIGHT                    &kp ESCAPE  &lt 5 SPACE    &kp TAB                  &kp ENTER  &kp BACKSPACE  &kp DELETE                   &kp DOWN               &kp UP         &kp LBKT         &kp RBKT      &mo 1
            >;
        };

        layer_fn {
            bindings = <
      &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11      &kp F12
 &bootloader  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans  &bootloader
      &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans       &trans
      &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans       &trans
      &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans       &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_qwerty {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans     &trans      &trans         &trans  &trans
 &trans   &kp Q   &kp W   &kp E   &kp R   &kp T            &trans                                                  &trans   &kp Y   &kp U      &kp I       &kp O          &kp P  &trans
 &trans   &kp A   &kp S   &kp D   &kp F   &kp G            &trans  &trans  &trans                  &trans  &trans  &trans   &kp H   &kp J      &kp K       &kp L  &kp SEMICOLON  &trans
 &trans   &kp Z   &kp X   &kp C   &kp V   &kp B            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &kp N   &kp M  &kp COMMA  &kp PERIOD      &kp SLASH  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans     &trans      &trans         &trans  &trans
            >;
        };

        layer_gaming {
            bindings = <
         &trans            &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans                &trans                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &kp LEFT_ALT             &kp B         &kp Q         &kp W         &kp E   &kp R                &trans                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
   &kp CAPSLOCK             &kp H         &kp A         &kp S         &kp D   &kp F                 &kp G     &trans   &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LEFT_SHIFT  &kp LEFT_CONTROL         &kp Z         &kp X         &kp C   &kp V                &trans     &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans            &trans        &trans        &trans        &trans                    &kp ESCAPE  &kp SPACE  &kp TAB                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_nav {
            bindings = <
 &trans        &trans        &trans     &trans          &trans  &trans            &trans                                                                &trans      &trans         &trans       &trans     &trans        &trans  &trans
 &trans        &trans        &trans     &trans          &trans  &trans            &trans                                                                &trans  &kp K_REDO    &kp K_PASTE   &kp K_COPY  &kp K_CUT    &kp K_UNDO  &trans
 &trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans            &trans  &trans  &trans                     &trans         &trans      &trans    &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT  &kp CAPSLOCK  &trans
 &trans        &trans        &trans     &trans          &trans  &trans            &trans  &trans  &trans  &trans  &trans     &trans         &trans      &trans      &trans  &kp PAGE_DOWN  &kp PAGE_UP   &kp HOME       &kp END  &trans
 &trans        &trans        &trans     &trans          &trans                    &trans  &trans  &trans                  &kp ENTER  &kp BACKSPACE  &kp DELETE                     &trans       &trans     &trans        &trans  &trans
            >;
        };

        layer_modsoff {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans   &kp A   &kp R   &kp S   &kp T  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans   &kp N   &kp E   &kp I   &kp O  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
